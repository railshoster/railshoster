#!/usr/bin/env ruby

require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'init'))

require 'fileutils'

require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'railshoster'))

require 'gli'

gli_version_greater_than_2 = GLI::VERSION >= '2.0.0'

include gli_version_greater_than_2 ? GLI::App : GLI

version Railshoster::VERSION

program_desc "RailsHoster.com Application Deployment Suite"

desc 'Create new RailsHoster.com application deployment'
arg_name 'dir_name'
long_desc 'This command helps to deploy a Ruby on Rails application to your RailsHoster account using the application token you have received after signing up.'
command [:init] do |c|
  
  c.desc "Use the RailsHoster application_token to pass your account credentials."
  c.flag [:a, :apptoken]      
  
  c.desc "Use a json string to pass your account credentials."
  c.flag [:j, :json]

  c.action do |global_options,options,args|    

    unless (options[:a] || options[:j]) then
      raise "Option '-a' or '-j' is required for the 'init' command.\n" +
        "How else should I know where you want to deploy to?"
    end

    cwd = FileUtils.pwd      
    ask_for_project_dir(cwd) if args.empty?        
    project_git_dir_name = args[0] || cwd
    
    if options[:a] then
      
      while options[:a].include?('\\n') 
        options[:a] = options[:a].gsub('\\n', "\n")
      end

      Railshoster::InitCommand.run_by_application_token(project_git_dir_name, options[:a])    
    elsif options[:j] then
      Railshoster::InitCommand.new(project_git_dir_name, options[:j]).start
    else
      raise "Illegal State."
    end
  end
end

desc "Deploy your application to RailsHoster.com"
arg_name 'dir_name'
long_desc "Use this command to deploy your application to RailsHoster.com after you have successfully initialized it using the 'init' command."
command [:deploy] do |c|
  c.action do |global_options,options,args|
    project_git_dir_name = args[0] || FileUtils.pwd
    Railshoster::DeployCommand.new(project_git_dir_name).deploy
    
    puts "\nNow, where you have deployed your app you might want to have a look at it. You can find it here:"
    
    Railshoster::AppUrlCommand.new(project_git_dir_name).show
  end
end

desc "Setup your application on RailsHoster.com"
arg_name 'dir_name'
long_desc "Use this command to setup your application on RailsHoster.com after you have successfully initialized it using the 'init' command."
command ["deploy:setup"] do |c|
  c.action do |global_options,options,args|
    project_git_dir_name = args[0] || FileUtils.pwd
    Railshoster::DeployCommand.new(project_git_dir_name).deploy_setup
    
    puts "\nNow, where you have setup your app you should run the 'deploy:cold' command."
    
  end
end

desc "Deploy your application the first time to RailsHoster.com"
arg_name 'dir_name'
long_desc "Use this command to deploy your application on RailsHoster.com the first time."
command ["deploy:cold"] do |c|
  c.action do |global_options,options,args|
    project_git_dir_name = args[0] || FileUtils.pwd
    Railshoster::DeployCommand.new(project_git_dir_name).deploy_cold
  end
end

desc "Show the default RailsHoster.com URL for your app."
long_desc "Whenever you ask what the initial RailsHoster.com URL of your app was just invoke this command. It will tell you."
command [:appurl] do |c|
  c.action do |global_options,options,args|
    project_git_dir_name = args[0] || FileUtils.pwd
    Railshoster::AppUrlCommand.new(project_git_dir_name).show
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  true
end

post do |global,command,options,args|
  # Post logic here
end

# Invoke the app like this RAILSHOSTER_DEV=1 ~/git/railshoster/bin/railshoster 
# in order to receive a full stack trace in case of errors.
on_error do |exception|  
  ret = true
  ret = print_error(exception) if ENV["RAILSHOSTER_DEV"]  
  ret
end

#### Helper methods

def print_error(exception)
  puts "\n"
  puts "-" * 50
  puts "Sorry. An Exception has occured. Don't worry I try to explain what happened:"
  puts "-" * 50
  puts "The Exception class is: #{exception.class}"
  puts "The Exception message is:\n"
  puts exception.message
  puts "Here is the backtrace:"
  puts "-" * 50
  puts exception.backtrace
  puts "-" * 50
  puts "If this does not help write to support@railshoster.com."
  puts "Please provide the command you invoked, in which directory as well as information about your runtime environment (Ruby Version, OS, ...)."
  false
end

def ask_for_project_dir(current_working_dir)  
  puts "You have not specified your local project folder to be deployed.\n" +
    "I assume you want to use your current working directory: #{current_working_dir}.\n"
  print "Correct? (y/n) [n]: "
  decision = STDIN.gets.chomp
  unless %w(y Y).include?(decision) then
    exit_now!("Initialization aborted.", -1)
  end      
end

if gli_version_greater_than_2
  exit run(ARGV)
else 
  exit GLI.run(ARGV)
end
